{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-boolean-example",
  "type": "registry:example",
  "author": "shadcn (https://ui.shadcn.com)",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "examples/hooks/use-boolean-example.tsx",
      "content": "'use client'\nimport { useBoolean } from '@/registry/default/hooks/use-boolean'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport {\n  CheckCircle2,\n  XCircle,\n  RotateCcw,\n  RefreshCw,\n  ToggleLeft,\n} from 'lucide-react'\n\nconst UseBooleanExample = () => {\n  const [value, { setValue, toggle, setTrue, setFalse, reset, getValue }] =\n    useBoolean(false)\n\n  return (\n    <Card className=\"mx-auto border shadow-sm transition-all duration-200\">\n      <CardHeader className=\"pb-2\">\n        <CardTitle className=\"text-center flex flex-col items-center gap-3\">\n          <h6 className=\"text-sm uppercase tracking-wide text-muted-foreground font-medium\">\n            Current value\n          </h6>\n          <div key={value.toString()}>\n            <Badge\n              variant={value ? 'default' : 'destructive'}\n              className=\"px-4 py-1 text-sm font-medium\"\n            >\n              {value ? 'true' : 'false'}\n            </Badge>\n          </div>\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"pt-6\">\n        <div className=\"grid grid-cols-2 gap-3 sm:grid-cols-3\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={setTrue}\n            className=\"h-9 font-medium transition-colors hover:bg-primary/10 hover:text-primary hover:border-primary/20 flex items-center justify-center gap-2\"\n          >\n            <CheckCircle2 className=\"h-4 w-4\" /> Set True\n          </Button>\n\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={setFalse}\n            className=\"h-9 font-medium transition-colors hover:bg-destructive/10 hover:text-destructive hover:border-destructive/20 flex items-center justify-center gap-2\"\n          >\n            <XCircle className=\"h-4 w-4\" /> Set False\n          </Button>\n\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            onClick={toggle}\n            className=\"h-9 font-medium transition-colors flex items-center justify-center gap-2\"\n          >\n            <ToggleLeft className=\"h-4 w-4\" /> Toggle\n          </Button>\n\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={reset}\n            className=\"h-9 font-medium transition-colors flex items-center justify-center gap-2\"\n          >\n            <RotateCcw className=\"h-4 w-4\" /> Reset\n          </Button>\n\n          <Button\n            variant=\"default\"\n            size=\"sm\"\n            onClick={() => setValue(!getValue())}\n            className=\"h-9 font-medium transition-colors col-span-1 sm:col-span-2 flex items-center justify-center gap-2\"\n            title=\"Same as toggle but using setValue and getValue methods\"\n          >\n            <RefreshCw className=\"h-4 w-4\" /> Set Opposite (Alternative)\n          </Button>\n        </div>\n        <div className=\"mt-3 text-xs text-muted-foreground\">\n          Note: \"Toggle\" and \"Set Opposite\" perform the same action but use\n          different hook methods.\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default UseBooleanExample\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}