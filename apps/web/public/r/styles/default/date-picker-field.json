{
  "$schema": "",
  "name": "date-picker-field",
  "type": "registry:component",
  "author": "shaddy (https://shaddy-docs.vercel.app/)",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": ["http://localhost:3000/r/shaddy-form", "calender"],
  "files": [
    {
      "path": "form/fields/date-picker-field.tsx",
      "content": "import { FieldValues, Path, useFormContext } from 'react-hook-form'\nimport { format } from 'date-fns'\nimport { CalendarIcon } from 'lucide-react'\n\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n  FormDescription,\n} from '@/components/ui/form'\nimport { Button } from '@/components/ui/button'\nimport { Calendar } from '@/components/ui/calendar'\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover'\n\ntype Props<T extends FieldValues> = {\n  name: Path<T>\n  label?: string\n  required?: boolean\n  disabled?: boolean\n  className?: string\n  description?: string\n}\n\n/**\n * DateField component\n *\n * @param name - The name of the field.\n * @param label - The label for the field.\n * @param required - Whether the field is required.\n * @param disabled - Whether the field is disabled.\n * @param className - The class name for the field.\n * @returns The DateField component.\n */\n\nexport const DatePickerField = <T extends FieldValues>({\n  name,\n  label,\n  required = false,\n  disabled = false,\n  className,\n  description,\n}: Props<T>) => {\n  const { control } = useFormContext<T>()\n\n  return (\n    <FormField\n      control={control}\n      name={name}\n      render={({ field }) => (\n        <FormItem className={`flex flex-col w-full ${className ?? ''}`}>\n          {label && (\n            <FormLabel htmlFor={name} className=\"mb-1\">\n              <span>{label}</span>\n              {required && <span className=\"ml-1 text-red-500\">*</span>}\n            </FormLabel>\n          )}\n          <Popover>\n            <PopoverTrigger asChild>\n              <FormControl>\n                <Button\n                  variant=\"outline\"\n                  className={`w-full pl-3 text-left font-normal ${!field.value ? 'text-muted-foreground' : ''}`}\n                  disabled={disabled}\n                >\n                  {field.value ? (\n                    format(field.value, 'PPP')\n                  ) : (\n                    <span>Pick a date</span>\n                  )}\n                  <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                </Button>\n              </FormControl>\n            </PopoverTrigger>\n            <PopoverContent className=\"w-auto p-0\" align=\"start\">\n              <Calendar\n                mode=\"single\"\n                selected={field.value}\n                onSelect={field.onChange}\n                captionLayout=\"dropdown\"\n              />\n            </PopoverContent>\n          </Popover>\n          {description && <FormDescription>{description}</FormDescription>}\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  )\n}\n\nDatePickerField.displayName = 'DatePickerField'\n",
      "type": "registry:component",
      "target": "components/form/fields/date-picker-field.tsx"
    }
  ]
}
