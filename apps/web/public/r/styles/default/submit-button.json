{
  "$schema": "",
  "name": "submit-button",
  "type": "registry:component",
  "author": "shaddy (https://shaddy-docs.vercel.app/)",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": ["http://localhost:3000/r/shaddy-form"],
  "files": [
    {
      "path": "form/fields/submit-button.tsx",
      "content": "import { cn } from '@/lib/utils'\nimport { FC, ReactNode } from 'react'\nimport { Button, ButtonProps } from '@/components/ui/button'\n\ntype SubmitButtonProps = ButtonProps & {\n  isLoading?: boolean\n  disabled?: boolean\n  label?: string\n  loadingLabel?: string\n  icon?: ReactNode\n  loadingIcon?: ReactNode\n  className?: string\n}\n\n/**\n * Props for the SubmitButton component.\n *\n * @typedef {Object} SubmitButtonProps\n * @property {boolean} [isLoading] - If true, shows loading state and disables the button.\n * @property {boolean} [disabled] - If true, disables the button.\n * @property {string} [label] - The label to display on the button.\n * @property {string} [loadingLabel] - The label to display when loading.\n * @property {ReactNode} [icon] - Icon to display before the label.\n * @property {ReactNode} [loadingIcon] - Icon to display when loading.\n * @property {string} [className] - Additional CSS classes for the button.\n */\n\n/**\n * SubmitButton component for forms, supporting loading and disabled states.\n *\n * @param {SubmitButtonProps} props - The props for the SubmitButton.\n * @returns {JSX.Element} The rendered submit button.\n */\n\nexport const SubmitButton: FC<SubmitButtonProps> = ({\n  isLoading = false,\n  disabled = false,\n  label = 'Save Changes',\n  loadingLabel = 'Saving...',\n  icon,\n  loadingIcon,\n  className,\n  ...props\n}) => {\n  if (isLoading) {\n    return (\n      <Button\n        className={cn('w-full gap-2', className)}\n        type=\"submit\"\n        disabled\n        {...props}\n      >\n        <span className=\"animate-spin\">{loadingIcon}</span>\n        {loadingLabel}\n      </Button>\n    )\n  }\n\n  return (\n    <Button\n      className={cn('w-full gap-2', className)}\n      type=\"submit\"\n      disabled={disabled}\n      {...props}\n    >\n      {icon}\n      {label}\n    </Button>\n  )\n}\n\nSubmitButton.displayName = 'SubmitButton'\n",
      "type": "registry:component",
      "target": "components/form/fields/submit-button.tsx"
    }
  ]
}
