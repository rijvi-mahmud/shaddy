{
  "$schema": "",
  "name": "password-field",
  "type": "registry:component",
  "author": "shaddy (https://shaddy-docs.vercel.app/)",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": ["http://localhost:3000/r/shaddy-form"],
  "files": [
    {
      "path": "form/fields/password-field.tsx",
      "content": "import { cn } from '@/lib/utils'\nimport { Eye, EyeOff } from 'lucide-react'\nimport { useState } from 'react'\nimport { FieldValues, Path, useFormContext } from 'react-hook-form'\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\n\ntype PasswordFieldProps<T extends FieldValues> = {\n  name: Path<T>\n  label?: string\n  placeholder?: string\n  required?: boolean\n  className?: string\n  icon?: boolean\n  showIcon?: React.ReactNode\n  hideIcon?: React.ReactNode\n}\n\n/**\n * Generic password field component.\n * Validation is handled externally (e.g., with Zod).\n */\nexport const PasswordField = <T extends FieldValues>({\n  name,\n  label,\n  placeholder = 'Enter password',\n  required = false,\n  className,\n  icon = true,\n  showIcon = <Eye size={18} />,\n  hideIcon = <EyeOff size={18} />,\n}: PasswordFieldProps<T>) => {\n  const { control } = useFormContext<T>()\n  const [showPassword, setShowPassword] = useState(false)\n\n  return (\n    <FormField\n      control={control}\n      name={name}\n      render={({ field }) => (\n        <FormItem className={cn(className)}>\n          {label && (\n            <FormLabel>\n              {label}\n              {required && <span className=\"text-red-500 ml-1\">*</span>}\n            </FormLabel>\n          )}\n\n          <FormControl>\n            <div className=\"relative\">\n              <Input\n                {...field}\n                type={showPassword ? 'text' : 'password'}\n                placeholder={placeholder}\n                className=\"pr-10\"\n              />\n              {icon && (\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword((v) => !v)}\n                  className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-500 hover:text-gray-700\"\n                  tabIndex={-1}\n                  aria-label={showPassword ? 'Hide password' : 'Show password'}\n                >\n                  {showPassword ? hideIcon : showIcon}\n                </button>\n              )}\n            </div>\n          </FormControl>\n\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  )\n}\n\nPasswordField.displayName = 'PasswordField'\n",
      "type": "registry:component",
      "target": "components/form/fields/password-field.tsx"
    }
  ]
}
