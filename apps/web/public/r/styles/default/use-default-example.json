{
  "$schema": "",
  "name": "use-default-example",
  "type": "registry:example",
  "author": "shaddy (https://shaddy-docs.vercel.app/)",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "examples/hooks/use-default-example.tsx",
      "content": "'use client'\nimport { useState } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { useDefault } from '@/registry/default/hooks/use-default'\nimport {\n  RotateCcw,\n  CircleOff,\n  CircleSlash,\n  Plus,\n  Minus,\n  RefreshCw,\n} from 'lucide-react'\n\nconst UseDefaultExample = () => {\n  const initialValue = 10\n  const defaultValue = 0\n  const [value, setValue] = useDefault(initialValue, defaultValue)\n  const [customValue, setCustomValue] = useState(5)\n\n  return (\n    <Card className=\"mx-auto border shadow-sm transition-all duration-200 max-w-sm\">\n      <CardHeader className=\"pb-2\">\n        <CardTitle className=\"text-center flex flex-col justify-center items-center gap-3\">\n          <h6 className=\"text-sm uppercase tracking-wide text-muted-foreground font-medium\">\n            Current value\n          </h6>\n          <div className=\"flex items-center gap-2\">\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={() => setValue(value - 1)}\n              className=\"h-8 w-8 p-0\"\n            >\n              <Minus className=\"h-4 w-4\" />\n            </Button>\n\n            <Badge\n              variant={\n                value > 0 ? 'default' : value < 0 ? 'destructive' : 'secondary'\n              }\n              className=\"px-4 py-1 text-sm font-medium\"\n            >\n              {value}\n            </Badge>\n\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={() => setValue(value + 1)}\n              className=\"h-8 w-8 p-0\"\n            >\n              <Plus className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"pt-6\">\n        <div className=\"grid grid-cols-2 gap-3 sm:grid-cols-3\">\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            onClick={() => setValue(null)}\n            className=\"h-9 font-medium transition-colors flex items-center justify-center gap-2\"\n          >\n            <CircleOff className=\"h-4 w-4\" /> Set Null\n          </Button>\n\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => setValue(undefined)}\n            className=\"h-9 font-medium transition-colors flex items-center justify-center gap-2\"\n          >\n            <CircleSlash className=\"h-4 w-4\" /> Set Undefined\n          </Button>\n\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setValue(initialValue)}\n            className=\"h-9 font-medium transition-colors flex items-center justify-center gap-2\"\n          >\n            <RotateCcw className=\"h-4 w-4\" /> Reset\n          </Button>\n\n          <Button\n            variant=\"default\"\n            size=\"sm\"\n            onClick={() => setValue(customValue)}\n            className=\"h-9 font-medium transition-colors col-span-1 sm:col-span-3 flex items-center justify-center gap-2\"\n          >\n            <RefreshCw className=\"h-4 w-4\" /> Set Custom Value ({customValue})\n          </Button>\n        </div>\n        <div className=\"mt-3 text-xs text-muted-foreground\">\n          <p>\n            Initial: {initialValue} | Default: {defaultValue} | Custom:{' '}\n            {customValue}\n          </p>\n          <p className=\"mt-1\">\n            Note: When setting to null or undefined, the hook automatically\n            falls back to the default value ({defaultValue}).\n          </p>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default UseDefaultExample\n",
      "type": "registry:example",
      "target": "components/use-default-example.tsx"
    }
  ]
}
