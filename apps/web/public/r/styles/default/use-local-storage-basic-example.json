{
  "$schema": "",
  "name": "use-local-storage-basic-example",
  "type": "registry:example",
  "author": "shaddy (https://shaddy-docs.vercel.app/)",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "examples/hooks/use-local-storage-basic-example.tsx",
      "content": "'use client'\n\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { useLocalStorage } from '@/registry/default/hooks/use-local-storage'\nimport { Trash2 } from 'lucide-react'\n\n// Example 1: Basic counter with localStorage persistence\nconst BasicExample = () => {\n  const [count, setCount, removeCount] = useLocalStorage('counter', 0)\n  const [name, setName, removeName] = useLocalStorage('user-name', '')\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"bg-muted/30 rounded-md p-4 shadow-sm\">\n        <div className=\"text-center mb-4\">\n          <div className=\"text-sm text-muted-foreground mb-1\">\n            Persistent Counter\n          </div>\n          <div className=\"text-4xl font-bold text-primary mb-2\">{count}</div>\n          <div className=\"flex justify-center gap-2\">\n            <Button onClick={() => setCount(count + 1)} size=\"sm\">\n              Increment\n            </Button>\n            <Button\n              onClick={() => setCount(count - 1)}\n              variant=\"outline\"\n              size=\"sm\"\n            >\n              Decrement\n            </Button>\n            <Button onClick={() => setCount(0)} variant=\"secondary\" size=\"sm\">\n              Reset\n            </Button>\n            <Button onClick={removeCount} variant=\"destructive\" size=\"sm\">\n              <Trash2 className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"name\">Your Name (persisted)</Label>\n          <div className=\"flex gap-2\">\n            <Input\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              placeholder=\"Enter your name...\"\n              className=\"flex-1\"\n            />\n            <Button onClick={removeName} variant=\"outline\" size=\"sm\">\n              Clear\n            </Button>\n          </div>\n          {name && (\n            <div className=\"text-sm text-muted-foreground\">\n              Hello, <span className=\"font-medium\">{name}</span>! ðŸ‘‹\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"text-sm p-2 bg-muted/30 text-muted-foreground rounded border\">\n        <code className=\"font-mono text-xs\">\n          const [value, setValue, removeValue] = useLocalStorage(key,\n          initialValue)\n        </code>\n        <div className=\"mt-1 text-xs\">\n          Refresh the page to see values persist across sessions\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BasicExample\n",
      "type": "registry:example",
      "target": "components/use-local-storage-basic-example.tsx"
    }
  ]
}
