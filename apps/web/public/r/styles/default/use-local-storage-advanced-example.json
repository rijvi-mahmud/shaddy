{
  "$schema": "",
  "name": "use-local-storage-advanced-example",
  "type": "registry:example",
  "author": "shaddy (https://shaddy-docs.vercel.app/)",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "examples/hooks/use-local-storage-advanced-example.tsx",
      "content": "'use client'\nimport { Button } from '@/components/ui/button'\nimport { useLocalStorage } from '@/registry/default/hooks/use-local-storage'\nimport { RefreshCw } from 'lucide-react'\n\n// Example 4: Advanced usage with custom serialization\nconst AdvancedExample = () => {\n  // Custom serialization for Date objects\n  const [lastVisit, setLastVisit, removeLastVisit] = useLocalStorage(\n    'last-visit',\n    new Date(),\n    {\n      serializer: (date: Date) => date.toISOString(),\n      deserializer: (dateStr: string) => new Date(dateStr),\n    }\n  )\n\n  // Shopping cart with complex data\n  type CartItem = {\n    id: number\n    name: string\n    price: number\n    quantity: number\n    addedAt: Date\n  }\n  const [cart, setCart, removeCart] = useLocalStorage<CartItem[]>(\n    'shopping-cart',\n    []\n  )\n\n  const addToCart = () => {\n    const newItem = {\n      id: Date.now(),\n      name: `Item ${cart.length + 1}`,\n      price: Math.floor(Math.random() * 100) + 10,\n      quantity: 1,\n      addedAt: new Date(),\n    }\n    setCart([...cart, newItem])\n  }\n\n  const updateVisit = () => {\n    setLastVisit(new Date())\n  }\n\n  const totalPrice = cart.reduce(\n    (sum, item) => sum + item.price * item.quantity,\n    0\n  )\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"bg-muted/30 rounded-md p-4 shadow-sm\">\n        <h3 className=\"text-lg font-semibold mb-4\">Advanced Features</h3>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"space-y-3\">\n            <h4 className=\"font-medium\">Custom Date Serialization</h4>\n            <div className=\"p-3 bg-muted/50 rounded\">\n              <div className=\"text-sm text-muted-foreground\">Last Visit:</div>\n              <div className=\"font-mono text-sm\">\n                {lastVisit.toLocaleString()}\n              </div>\n              <Button onClick={updateVisit} size=\"sm\" className=\"mt-2\">\n                <RefreshCw className=\"h-4 w-4 mr-1\" />\n                Update Visit Time\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"space-y-3\">\n            <h4 className=\"font-medium\">Shopping Cart</h4>\n            <div className=\"p-3 bg-muted/50 rounded\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"text-sm text-muted-foreground\">\n                  Items: {cart.length}\n                </span>\n                <span className=\"font-medium\">${totalPrice.toFixed(2)}</span>\n              </div>\n              <div className=\"flex gap-2\">\n                <Button onClick={addToCart} size=\"sm\">\n                  Add Item\n                </Button>\n                <Button\n                  onClick={removeCart}\n                  variant=\"outline\"\n                  size=\"sm\"\n                  disabled={cart.length === 0}\n                >\n                  Clear Cart\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {cart.length > 0 && (\n          <div className=\"mt-4\">\n            <h5 className=\"font-medium mb-2\">Cart Contents:</h5>\n            <div className=\"space-y-2 max-h-40 overflow-y-auto\">\n              {cart.map((item) => (\n                <div\n                  key={item.id}\n                  className=\"flex justify-between items-center p-2 bg-background rounded border text-sm\"\n                >\n                  <span>{item.name}</span>\n                  <span className=\"font-medium\">${item.price}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default AdvancedExample\n",
      "type": "registry:example",
      "target": "components/use-local-storage-advanced-example.tsx"
    }
  ]
}
