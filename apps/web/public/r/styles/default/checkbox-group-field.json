{
  "$schema": "",
  "name": "checkbox-group-field",
  "type": "registry:component",
  "author": "shaddy (https://shaddy-docs.vercel.app/)",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": ["http://localhost:3000/r/shaddy-form"],
  "files": [
    {
      "path": "form/fields/checkbox-group-field.tsx",
      "content": "import { Checkbox } from '@/components/ui/checkbox'\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { cn } from '@/lib/utils'\nimport { FieldValues, Path, useFormContext } from 'react-hook-form'\n\ntype Option = {\n  text: string\n  value: string\n}\n\ntype Props<T extends FieldValues> = {\n  name: Path<T>\n  label?: string\n  options: Option[]\n  className?: string\n  disabled?: boolean\n  column?: boolean\n  required?: boolean\n}\n\n/**\n * CheckboxGroupField. A checkbox group field component.\n *\n * @param name - The name of the field.\n * @param label - The label of the field.\n * @param options - The options of the field.\n * @param className - The class name of the field.\n * @param disabled - The disabled flag of the field.\n * @param column - The column flag of the field.\n * @param required - The required flag of the field.\n * @returns A checkbox group field component.\n *\n * @example\n * ```tsx\n * <CheckboxGroupField\n *   name=\"skills\"\n *   label=\"Skills\"\n *   options={[\n *     { text: 'React', value: 'react' },\n *     { text: 'Vue', value: 'vue' },\n *     { text: 'Angular', value: 'angular' },\n *   ]}\n * />\n * ```\n */\n\nexport const CheckboxGroupField = <T extends FieldValues>({\n  name,\n  label,\n  options,\n  className,\n  disabled,\n  column = true,\n  required,\n}: Props<T>) => {\n  const { control } = useFormContext<T>()\n\n  return (\n    <FormField\n      control={control}\n      name={name}\n      render={({ field }) => (\n        <FormItem className={className}>\n          {label && (\n            <FormLabel htmlFor={name}>\n              <span>{label}</span>\n              {required && <span className=\"ml-1 text-red-500\">*</span>}\n            </FormLabel>\n          )}\n          <FormControl>\n            <div\n              className={cn(\n                'flex gap-4',\n                column ? 'flex-col' : 'flex-row flex-wrap'\n              )}\n            >\n              {options.map((option) => (\n                <div key={option.value} className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    checked={(field.value as string[])?.includes(option.value)}\n                    onCheckedChange={(checked) => {\n                      const value = (field.value as string[]) || []\n                      if (checked) {\n                        field.onChange([...value, option.value])\n                      } else {\n                        field.onChange(\n                          value.filter((val) => val !== option.value)\n                        )\n                      }\n                    }}\n                    disabled={disabled}\n                    id={option.value}\n                  />\n                  <label\n                    htmlFor={option.value}\n                    className=\"text-sm font-medium leading-none\"\n                  >\n                    {option.text}\n                  </label>\n                </div>\n              ))}\n            </div>\n          </FormControl>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  )\n}\n\nCheckboxGroupField.displayName = 'CheckboxGroupField'\n",
      "type": "registry:component",
      "target": "components/form/fields/checkbox-group-field.tsx"
    }
  ]
}
