{
  "$schema": "",
  "name": "select-field",
  "type": "registry:component",
  "author": "shaddy (https://shaddy-docs.vercel.app/)",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": ["http://localhost:3000/r/shaddy-form"],
  "files": [
    {
      "path": "form/fields/select-field.tsx",
      "content": "import {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport { FieldValues, Path, useFormContext } from 'react-hook-form'\n\ntype Props<T extends FieldValues> = {\n  name: Path<T>\n  label?: string\n  placeholder?: string\n  options: { value: string; text: string }[]\n  required?: boolean\n  className?: string\n}\n\n/**\n * SelectField component\n *\n * @param {Path<T>} name - The name of the field\n * @param {string} label - The label of the field\n * @param {string} placeholder - The placeholder of the field\n * @param {Array<{ value: string, text: string }>} options - The options of the field\n * @param {boolean} required - Whether the field is required\n * @param {string} className - The class name of the field\n *\n * @returns {ReactElement} - The select field component\n *\n * @example\n * ```tsx\n * <SelectField\n *  name=\"publishedStatus\"\n *  label=\"Published Status\"\n *  options={PublishedOptions}\n * />\n * ```\n */\n\nexport const SelectField = <T extends FieldValues>({\n  name,\n  label,\n  placeholder,\n  options,\n  required = false,\n  className,\n}: Props<T>) => {\n  const { control } = useFormContext<T>()\n\n  return (\n    <FormField\n      name={name}\n      control={control}\n      render={({ field }) => (\n        <FormItem className={className}>\n          {label && (\n            <FormLabel>\n              <span>{label}</span>\n              {required && <span className=\"ml-1 text-red-500\">*</span>}\n            </FormLabel>\n          )}\n          <Select onValueChange={field.onChange} value={field.value}>\n            <FormControl>\n              <SelectTrigger>\n                <SelectValue placeholder={placeholder ?? 'Select an item'} />\n              </SelectTrigger>\n            </FormControl>\n\n            <SelectContent>\n              {options.map((option) => (\n                <SelectItem key={option.value} value={option.value}>\n                  {option.text}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  )\n}\n\nSelectField.displayName = 'SelectField'\n",
      "type": "registry:component",
      "target": "components/form/fields/select-field.tsx"
    }
  ]
}
